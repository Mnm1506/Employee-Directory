{"version":3,"sources":["components/Container.js","utils/API.js","components/SearchResult.js","App.js","reportWebVitals.js","index.js"],"names":["Container","className","Component","axios","get","SearchResult","state","search","employees","filteredArray","searchUpdate","event","setState","target","value","filter","data","name","first","toLowerCase","includes","toLocaleLowerCase","getEmployees","API","then","res","results","catch","err","console","log","this","sortedArr","sort","a","b","sortA","sortB","compare","Form","inline","FormControl","type","placeholder","onChange","Button","variant","onClick","sortAsc","bind","sortDec","Table","striped","bordered","hover","map","login","picture","dob","cell","src","medium","alt","last","age","uuid","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4354133.chunk.js","sourcesContent":["import React,{ Component } from \"react\";\r\n\r\n\r\nclass Container extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <h1 className=\"container-fluid m-5\">Employee Directory</h1>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Container;","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from \"axios\";\r\n\r\nconst BASEURL = \"https://randomuser.me/api/?results=20\";\r\n\r\nexport default {\r\n    Employee: function (){\r\n        return axios.get(BASEURL);\r\n    }\r\n};","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Table from \"react-bootstrap/Table\"\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\nclass SearchResult extends Component {\r\n    state = {\r\n        search: \"\",\r\n        employees: [],\r\n        filteredArray: []\r\n    };\r\n\r\n    searchUpdate = (event) => {\r\n        this.setState({ search: event.target.value }, () => {\r\n            this.setState({\r\n                filteredArray: this.state.employees.filter(\r\n                    data => data.name.first.toLowerCase().includes(this.state.search.toLocaleLowerCase())\r\n                )\r\n            })\r\n        })\r\n    };\r\n\r\n    getEmployees = () => {\r\n        API.Employee().then(res => this.setState({ employees: res.data.results, filteredArray: res.data.results }))\r\n            .catch(err => console.log(err))\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getEmployees()\r\n    };\r\n\r\n    sortAsc() {\r\n        function comparison(a, b) {\r\n            const sortA = a.name.first.toLowerCase();\r\n            const sortB = b.name.first.toLowerCase();\r\n            let compare = 0;\r\n\r\n            if (sortA < sortB) {\r\n                compare = 1;\r\n            } else if (sortA > sortB) {\r\n                compare = -1;\r\n            }\r\n            return compare;\r\n        };\r\n\r\n        let sortedArr = this.state.filteredArray.sort(comparison);\r\n        this.setState({ filteredArray: sortedArr });\r\n    };\r\n\r\n    sortDec() {\r\n        function comparison(a, b) {\r\n            const sortA = a.name.first.toLowerCase();\r\n            const sortB = b.name.first.toLowerCase();\r\n            let compare = 0;\r\n\r\n            if (sortA > sortB) {\r\n                compare = 1;\r\n            } else if (sortA < sortB) {\r\n                compare = -1;\r\n            }\r\n            return compare;\r\n        };\r\n\r\n        let sortedArr = this.state.filteredArray.sort(comparison);\r\n        this.setState({ filteredArray: sortedArr });\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form inline>\r\n                    <FormControl type=\"text\" placeholder=\"Search by first name\" className=\"mr-md-4\" value={this.state.search} onChange={this.searchUpdate} />\r\n                    <Button variant=\"outline-info\" onClick={this.sortAsc.bind(this)}>Sort Asc</Button>\r\n                    <Button variant=\"outline-info\" onClick={this.sortDec.bind(this)}>Sort Dec</Button>\r\n                </Form>\r\n\r\n                <Table striped bordered hover className=\"table\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Profile Picture</th>\r\n                            <th>Name</th>\r\n                            <th>Age</th>\r\n                            <th>Cell Phone</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.filteredArray.map(({ login, picture, name, dob, cell }) => {\r\n                                return (\r\n                                    <tr key={login.uuid}>\r\n                                        <th><img src={picture.medium} alt=\"employee\" /></th>\r\n                                        <td>{name.first} {name.last}</td>\r\n                                        <td>{dob.age}</td>\r\n                                        <td>{cell}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    };\r\n\r\n};\r\n\r\nexport default SearchResult;","import './App.css';\nimport Container from './components/Container';\nimport SearchResult from './components/SearchResult';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Container />\n        <SearchResult />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}